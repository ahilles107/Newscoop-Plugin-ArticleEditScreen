{% extends 'NewscoopNewscoopBundle::admin_layout.html.twig' %}
{% block admin_title %}{{ parent() }} - {{ 'aes.name'|trans }}{% endblock %}
{% block admin_page_title_content %}{{ 'aes.name'|trans }} - {{ 'aes.settingstext'|trans }}{% endblock %}
{% block admin_stylesheets %}
<link rel="stylesheet" href="{{ Newscoop['WEBSITE_URL'] }}/bundles/newscoopnewscoop/css/bootstrap.css">
<link rel="stylesheet" href="{{ asset('/bundles/newscoopnewscoop/css/jquery.dynatable.css') }}">
<link rel="stylesheet" href="{{ asset('/bundles/newscoopnewscoop/css/bootstrap-custom.css') }}">
<style>
.font-fix {
    font-size: 13px;
}
th a, th a:hover {
    color: #000;
}
</style>
{% endblock %}
{% block admin_scripts %}
<script type="text/javascript" src="{{ Newscoop['WEBSITE_URL'] }}/bundles/newscoopnewscoop/js/popover.js"></script>
<script src="{{ asset('/bundles/newscoopnewscoop/js/jquery.dynatable.js') }}"></script>
{% endblock %}
{% block admin_content %}
{% if form_errors(form) %}
 <div class="alert alert-danger alert-dismissible font-fix" role="alert">
  <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">{{ 'aes.btn.close'|trans}}</span></button>
  {{ form_errors(form) }}
</div>
{% endif %}
{% for flashMessage in app.session.flashbag.get('success') %}
<div class="alert alert-success alert-dismissible font-fix" role="alert">
  <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">{{ 'aes.btn.close'|trans}}</span></button>
  <center>{{ flashMessage }}</center>
</div>
{% endfor %}
{{ form_start(form) }}
<div class="system_pref font-fix">
    <div class="tabbable tabs-left">
    	<ul class="nav nav-tabs">
            <li class="active"><a href="#viewports" data-toggle="tab">{{ 'aes.settings.label.viewports'|trans }}</a></li>
            <li><a href="#images" data-toggle="tab">{{ 'aes.settings.label.images'|trans }}</a></li>
            <li><a href="#title" data-toggle="tab">{{ 'aes.settings.label.title'|trans }}</a></li>
            <li><a href="#switches" data-toggle="tab">{{ 'aes.settings.label.switches'|trans }}</a></li>
            <li><a href="#placeholders" data-toggle="tab">{{ 'aes.settings.label.placeholders'|trans }}</a></li>
            {% if hasPermission('plugin_editor_api') %}
            <li><a href="#api" data-toggle="tab">{{ 'aes.settings.label.api'|trans }}</a></li>
            {% endif %}
            <li><a href="#permissions" data-toggle="tab">{{ 'aes.settings.label.permissions'|trans }}</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="viewports">
            	<h3>{{ 'aes.settings.label.viewportssettings'|trans }}</h3>
                <dl>
                    <dt>
                        <label>{{ form_label(form.mobileview) }}: <small id="mobileview">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.mobileview, {'attr' : {'class' : 'input_text'}}) }} {{ 'aes.settings.label.pixels'|trans }}
                    </dd>
                    <dt>
                        <label>{{ form_label(form.tabletview) }}: <small id="tabletview">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.tabletview, {'attr' : {'class' : 'input_text'}}) }} {{ 'aes.settings.label.pixels'|trans }}
                    </dd>
                    <dt>
                        <label>{{ form_label(form.desktopview) }}: <small id="desktopview">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.desktopview, {'attr' : {'class' : 'input_text'}}) }} {{ 'aes.settings.label.pixels'|trans }}
                    </dd>
                </dl>
            </div>
            <div class="tab-pane" id="images">
            	<h3>{{ 'aes.settings.label.imagessettings'|trans }}</h3>
                <dl>
                    <dt>
                        <label>{{ form_label(form.imagesmall) }}: <small id="imagesmall">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.imagesmall, {'attr' : {'class' : 'input_text'}}) }} %
                    </dd>
                   	<dt>
                        <label>{{ form_label(form.imagemedium) }}: <small id="imagemedium">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.imagemedium, {'attr' : {'class' : 'input_text'}}) }} %
                    </dd>
                    <dt>
                        <label>{{ form_label(form.imagelarge) }}: <small id="imagelarge">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.imagelarge, {'attr' : {'class' : 'input_text'}}) }} %
                    </dd>
                    {% if hasPermission('plugin_editor_api') %}
                    <dt>
                        <label>{{ form_label(form.default_image_size) }}: <small id="default_image_size">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.default_image_size, {'attr' : {'class' : 'input_select', 'style' : 'min-width: 0px;'}}) }}
                    </dd>
                    {% endif %}
                </dl>
            </div>
            <div class="tab-pane" id="title">
            	<h3>{{ 'aes.settings.label.titlesettings'|trans }}</h3>
                <table class="table table-hover" style="font-size: 13px;">
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>{{ 'aes.settings.label.articletype'|trans }}</th>
                      <th>{{ 'aes.settings.form.title.position'|trans }}</th>
                    </tr>
                  </thead>
                  <tbody>
                    {% for pos in form.positions %}
                    <tr>
                      <td>{{ loop.index }}</td>
                      <td>{{ pos.vars.value.articleTypeName }}</td>
                      <td>
                        {{ form_widget(pos.titlePosition, {'attr' : {'class' : 'input_select'}}) }}
                      </td>
                    </tr>
                    {% endfor %}
                  </tbody>
                </table>
                {{ renderTip('aes.tip'|trans) }}
                <br>
            </div>
            <div class="tab-pane" id="switches">
            	<h3>{{ 'aes.settings.label.switchessettings'|trans }}</h3>
                <dl>
                    <dt>
                        <label>{{ form_label(form.showswitches) }}: <small id="showswitches">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.showswitches) }}
                    </dd>
                </dl>
            </div>
           	<div class="tab-pane" id="placeholders">
            	<h3>{{ 'aes.settings.label.placeholdersettings'|trans }}</h3>
                <dl>
                    <dt>
                        <label>{{ form_label(form.placeholder) }}: <small id="placeholder">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.placeholder, {'attr' : {'class' : 'input_select'}}) }}
                    </dd>
                </dl>
            </div>
            {% if hasPermission('plugin_editor_api') %}
            <div class="tab-pane" id="api">
                <h3>{{ 'aes.settings.label.apisettings'|trans }}</h3>
                <dl>
                    <dt>
                        <label>{{ form_label(form.apiendpoint) }}: <small id="apiendpoint">(?)</small></label>
                    </dt>
                    <dd>
                        {{ form_widget(form.apiendpoint, {'attr' : {'class' : 'input_select'}}) }}
                    </dd>
                </dl>
            </div>
            {% endif %}
            <div class="tab-pane" id="permissions">
                <h3>{{ 'aes.settings.label.permissionssettings'|trans }}</h3><br>
                {{ renderTip('aes.tippermissions'|trans) }}<br>
                <dl>
                <div class="row">
                    <div class="col-md-12">
                        <table id="users-table" class="table table-bordered table-hover table-striped" style="word-wrap: break-word;">
                        <thead>
                          <tr>
                            <th data-dynatable-no-sort="true" data-dynatable-column="toggle" style="width: 30px;"><input class="toggle-checkbox" type="checkbox"></th>
                            <th data-dynatable-column="username">{{ 'aes.table.th.username'|trans }}</th>
                            <th data-dynatable-column="first_name">{{ 'aes.table.th.firstname'|trans }}</th>
                            <th data-dynatable-column="last_name">{{ 'aes.table.th.lastname'|trans }}</th>
                            <th>{{ 'aes.table.th.email'|trans }}</th>
                            <th data-dynatable-column="types" data-dynatable-no-sort="true">{{ 'aes.table.th.type'|trans }}</th>
                            <th data-dynatable-column="updated">{{ 'aes.table.th.updated'|trans }}</th>
                          </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        </table>
                    </div>
                </div>
                </dl>
            </div>
            <div class="save-button-bar">
                <button type="submit" class="btn btn-sm btn-primary">{{ 'aes.btn.save'|trans }}</button>
            </div>
        </div>
	</div>
</div>
{{ form_end(form) }}
<script type="text/javascript">
function popover(target, content) {
    target.popover({
        trigger: 'hover',
        content : content
    });
};
popover($('#mobileview'), '{{ 'aes.popover.mobileview'|trans }}');
popover($('#desktopview'), '{{ 'aes.popover.desktopview'|trans }}');
popover($('#tabletview'), '{{ 'aes.popover.tabletview'|trans }}');
popover($('#imagesmall'), '{{ 'aes.popover.imagesmall'|trans }}');
popover($('#imagemedium'), '{{ 'aes.popover.imagemedium'|trans }}');
popover($('#imagelarge'), '{{ 'aes.popover.imagelarge'|trans }}');
popover($('#showswitches'), '{{ 'aes.popover.showswitches'|trans }}');
popover($('#placeholder'), '{{ 'aes.popover.placeholder'|trans }}');
{% if hasPermission('plugin_editor_api') %}
popover($('#apiendpoint'), '{{ 'aes.popover.apiendpoint'|trans }}');
popover($('#default_image_size'), '{{ 'aes.popover.imagesize'|trans }}');
{% endif %}
</script>
<script type="text/javascript">
    var dynatable = $('#users-table')
    .dynatable({
        inputs: {
            paginationClass: 'pagination',
            paginationActiveClass: 'current',
            paginationDisabledClass: 'unavailable',
            paginationPrev: '&laquo;',
            paginationNext: '&raquo;',
            pageText: '{{ 'aes.table.table_messages.page'|trans }}',
            perPageText: '{{ 'aes.table.table_messages.perPageText'|trans }}',
            pageText: '{{ 'aes.table.table_messages.pageText'|trans }}',
            recordCountPageBoundTemplate: '{{ 'aes.table.table_messages.recordCountPageBoundTemplate'|trans }}',
            recordCountPageUnboundedTemplate: '{{ 'aes.table.table_messages.recordCountPageUnboundedTemplate'|trans }}',
            recordCountTotalTemplate: '{recordsQueryCount} {collectionName}',
            recordCountFilteredTemplate: '{{ 'aes.table.table_messages.recordCountFilteredTemplate'|trans }}',
            recordCountText: '{{ 'aes.table.table_messages.recordCountText'|trans }}',
            recordCountTextTemplate: '{{ 'aes.table.table_messages.recordCountTextTemplate'|trans }}',
            recordCountTemplate: '{{ 'aes.table.table_messages.recordCountTemplate'|trans }}',
            processingText: '{{ 'aes.table.table_messages.processingText'|trans }}',
        },
        dataset: {
            ajax: true,
            ajaxUrl: Routing.generate('newscoop_editor_settings_loadusers'),
            ajaxOnLoad: false,
            records: [],
            perPageDefault: 10,
            perPageOptions: [10,20,50,100],
        },
        features: {
            paginate: true,
        },
        writers: {
            _cellWriter: function (column, record) {
                if (column.id == 'toggle') {
                    column.attributeWriter = function(record) {
                        var checked = '';
                        if (record.assigned) {
                            checked = 'checked';
                        }

                        return '<input type="checkbox" '+checked+' name="index[]" value="'+record.id+'" class="table-checkbox">';
                    }
                }

                if (column.id == 'updated') {
                    column.attributeWriter = function(record) {
                        return record.updated;
                    }
                }

                var html = column.attributeWriter(record),
                    td = '<td';

                if (column.hidden || column.textAlign) {
                  td += ' style="';
                  // keep cells for hidden column headers hidden
                  if (column.hidden) {
                    td += 'display: none;';
                  }
                  // keep cells aligned as their column headers are aligned
                  if (column.textAlign) {
                    td += 'text-align: ' + column.textAlign + ';';
                  }
                  td += '"';
                }
                if (column.cssClass) {
                  td += ' class="' + column.cssClass + '"';
                }

                return td + '>' + html + '</td>';
            }
        }
    }).bind('dynatable:ajax:success', function (e, response) {
        if (response.assignedAll) {
            $('.toggle-checkbox').prop('checked', true);
        } else {
            $('.toggle-checkbox').prop('checked', false);
        }
    }).data('dynatable');

    $('.toggle-checkbox').live('change', function() {
        $(this).parents('table').find('.table-checkbox').prop('checked', this.checked);
        if ($(this).prop("checked")) {
            $.post(Routing.generate('newscoop_editor_settings_assignall'),
                {'format': 'json'},
                function(data, textStatus, jqXHR) {
                    if (!data.status) {
                        flashMessage('{{ 'aes.alerts.assigallnerror'|trans }}', 'error');
                        return false;
                    }
                    dynatable.process();
                    flashMessage('{{ 'aes.alerts.unassignedall'|trans }}');
            });
        } else {
            $.post(Routing.generate('newscoop_editor_settings_unassignall'),
                {'format': 'json'},
                function(data, textStatus, jqXHR) {
                    if (!data.status) {
                        flashMessage('{{ 'aes.alerts.assignallerror'|trans }}', 'error');
                        return false;
                    }
                    dynatable.process();
                    flashMessage('{{ 'aes.alerts.unassignedall'|trans }}');
            });
        }
    });

    $('.table-checkbox').live('change', function(event) {
        if (!$(this).prop("checked")) {
            $.post(Routing.generate('newscoop_editor_settings_unassignuser', {userId: $(this).val()}), {'format': 'json'}, function(data, textStatus, jqXHR) {
                if (!data.status) {
                    flashMessage('{{ 'aes.alerts.unassignerror'|trans }}', 'error');
                    return false;
                }
                dynatable.process();
                flashMessage('{{ 'aes.alerts.unassigned'|trans }}');
            });
        } else {
            $.post(Routing.generate('newscoop_editor_settings_assignuser', {userId: $(this).val()}), {'format': 'json'}, function(data, textStatus, jqXHR) {
                if (!data.status) {
                    flashMessage('{{ 'aes.alerts.assignerror'|trans }}', 'error');
                    return false;
                }
                dynatable.process();
                flashMessage('{{ 'aes.alerts.assigned'|trans }}');
            });
        }
    });
</script>
{% endblock %}